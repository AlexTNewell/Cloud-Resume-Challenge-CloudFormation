AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:

  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: paul-burrells-butlers

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cloud_resume_challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"

  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z04833683GL5OT63FT49Q # TODO: Don't hardcode me
      RecordSets:
        - Name: objectivelyuncool.com # TODO: Don't hardcode me
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName
  
  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: objectivelyuncool.com # TODO: Don't hardcode me
      ValidationMethod: DNS

  MyDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        ViewerCertificate:
            AcmCertificateArn: !Ref MyCertificate
            SslSupportMethod: sni-only
        Origins:
          - DomainName: paul-burrells-butlers.s3-website-us-east-1.amazonaws.com
            Id: paul-burrells-butlers.s3-website-us-east-1.amazonaws.com
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: match-viewer
              OriginSSLProtocols:
                - SSLv3
        Enabled: true
        IPV6Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          CachedMethods:
            - GET
            - HEAD
          TargetOriginId: paul-burrells-butlers.s3-website-us-east-1.amazonaws.com
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
          MinTTL: 0
          DefaultTTL: 0
          MaxTTL: 0
        PriceClass: PriceClass_100
        Restrictions:
          GeoRestriction:
            RestrictionType: whitelist
            Locations:
              - US
              - CA
              - AU
              - NZ
              - GB
              - NO
              - SE
              - IE
              - DE
              - DK
              - NL
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:952832413145:certificate/2b419c03-a5ce-450e-b8ee-0c51681083aa
          SslSupportMethod: sni-only
        Aliases:
          - objectivelyuncool.com

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref MyWebsite
                - /*
      Bucket: !Ref MyWebsite

  CountFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: cloud_resume_challenge
      CodeUri: count_function/
      Handler: app.count_function
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /count
            Method: get

